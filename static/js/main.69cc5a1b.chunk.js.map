{"version":3,"sources":["assets/icons/leaf.png","assets/icons/close.svg","assets/icons/info.svg","assets/icons/page1.png","assets/icons/page2.png","assets/icons/page3.png","assets/icons/page4.png","assets/icons/page5.png","assets/icons/page6.png","components/Modal/Modal.jsx","components/Card/Card.js","components/Page1/Page1.jsx","components/Page2/Page2.jsx","components/Page3/Page3.jsx","components/Page4/Page4.jsx","components/Page5/Page5.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Modal","props","modalDisplay","className","src","Close","alt","onClick","closeModal","Leaf","Card","state","activateModal","setState","First","Info","to","this","React","Component","Page1","page2","Page2","page3","Page3","page4","Page4","page5","Page5","page6","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.69cc5a1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/leaf.00a28b60.png\";","module.exports = __webpack_public_path__ + \"static/media/close.c44f8750.svg\";","module.exports = __webpack_public_path__ + \"static/media/info.a97515b0.svg\";","module.exports = __webpack_public_path__ + \"static/media/page1.d932c2dc.png\";","module.exports = __webpack_public_path__ + \"static/media/page2.175aea10.png\";","module.exports = __webpack_public_path__ + \"static/media/page3.ee764ff0.png\";","module.exports = __webpack_public_path__ + \"static/media/page4.1a560ac7.png\";","module.exports = __webpack_public_path__ + \"static/media/page5.7020236d.png\";","module.exports = __webpack_public_path__ + \"static/media/page6.18931ec8.png\";","import React from 'react';\r\nimport './modal.scss';\r\nimport Close from '../../assets/icons/close.svg';\r\nimport Leaf from '../../assets/icons/leaf.png';\r\n\r\nfunction Modal(props) {\r\n    if (!props.modalDisplay) {\r\n        return null\r\n    } \r\n    return (\r\n        <div className=\"modal\">\r\n            <img src={Close} alt=\"Close\" className=\"modal__close\" onClick={() => props.closeModal()}/>\r\n            <div className=\"modal__container\">\r\n                <div className=\"modal__container-title\">\r\n                    <h1 className=\"modal__container-heading\">FROM THREAT INTO THREAD </h1> \r\n                    <img src={Leaf} alt=\"Leaf\" className=\"modal__container-leaf\"/>\r\n                </div>\r\n                <p className=\"modal__container-text\">Parley Ocean Plastic® is created from upcycled marine plastic waste that is intercepted from remote islands, beaches and coastal communities. We use it as a replacement for virgin plastic in the making of all adidas x Parley high-performance sportswear. After collecting plastic waste from coastlines, it's baled and sent to Parley supply chain partners. There it's shredded and reworked to become high-performance polyester yarn: Parley Ocean Plastic™, which is then used to create adidas x Parley sportswear, that's as good for the planet as it is for your workout.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport Leaf from \"../../assets/icons/leaf.png\";\r\nimport Info from \"../../assets/icons/info.svg\";\r\nimport First from \"../../assets/icons/page1.png\";\r\nimport \"./Card.scss\";\r\n\r\nclass Card extends React.Component {\r\n  state = {\r\n    modalDisplay: false,\r\n  };\r\n\r\n  activateModal = () => {\r\n    this.setState({\r\n      modalDisplay: true,\r\n    });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({\r\n      modalDisplay: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"card\">\r\n          <div className=\"card__images\">\r\n            <img\r\n              className=\"card__shoe-page\"\r\n              src={First}\r\n              alt=\"sustainable shoe\"\r\n            />\r\n            <img className=\"card__leaf\" src={Leaf} alt=\"leaf\" />\r\n            <img\r\n              className=\"card__info\"\r\n              onClick={() => this.activateModal()}\r\n              src={Info}\r\n              alt=\"information\"\r\n            />\r\n          </div>\r\n          <Link to=\"/1\" className=\"card__link\" />\r\n        </div>\r\n\r\n        <Modal\r\n          modalDisplay={this.state.modalDisplay}\r\n          closeModal={this.closeModal}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport page2 from \"../../assets/icons/page2.png\";\r\nimport \"./page1.scss\";\r\n\r\nfunction Page1() {\r\n  return (\r\n    <div className=\"page1\">\r\n      <img src={page2} alt=\"Page 1\" className=\"page1__screen\" />\r\n      <Link to=\"/2\">\r\n        <div className=\"page1__button\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page1;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport page3 from \"../../assets/icons/page3.png\";\r\nimport \"./page2.scss\";\r\n\r\nfunction Page2() {\r\n  return (\r\n    <div className=\"page2\">\r\n      <img src={page3} alt=\"Page 2\" className=\"page2__screen\" />\r\n      <Link to=\"/3\">\r\n        <div className=\"page2__button\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page2;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport page4 from \"../../assets/icons/page4.png\";\r\nimport \"./page3.scss\";\r\n\r\nfunction Page3() {\r\n  return (\r\n    <div className=\"page3\">\r\n      <img src={page4} alt=\"Page 3\" className=\"page3__screen\" />\r\n      <Link to=\"/4\">\r\n        <div className=\"page3__button\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page3;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport page5 from \"../../assets/icons/page5.png\";\r\nimport \"./page4.scss\";\r\n\r\nfunction Page4() {\r\n  return (\r\n    <div className=\"page4\">\r\n      <img src={page5} alt=\"Page 4\" className=\"page4__screen\" />\r\n      <Link to=\"/5\">\r\n        <div className=\"page4__link\" />\r\n      </Link>\r\n      <div className=\"page4__button\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page4;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport page6 from \"../../assets/icons/page6.png\";\r\nimport \"./page5.scss\";\r\n\r\nfunction Page5() {\r\n  return (\r\n    <div className=\"page5\">\r\n      <img src={page6} alt=\"Page 5\" className=\"page5__screen\" />\r\n      <Link to=\"/\">\r\n        <div className=\"page5__button\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page5;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Card from \"./components/Card/Card\";\r\nimport Page1 from \"./components/Page1/Page1\";\r\nimport Page2 from \"./components/Page2/Page2\";\r\nimport Page3 from \"./components/Page3/Page3\";\r\nimport Page4 from \"./components/Page4/Page4\";\r\nimport Page5 from \"./components/Page5/Page5\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Card} />\r\n          <Route path=\"/1\" component={Page1} />\r\n          <Route path=\"/2\" component={Page2} />\r\n          <Route path=\"/3\" component={Page3} />\r\n          <Route path=\"/4\" component={Page4} />\r\n          <Route path=\"/5\" component={Page5} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}